.macro print_S (%x)
	li $v0 4
	la $a0 %x
	syscall
.end_macro
.macro print_I (%y)
	li $v0 1
	move $a0 %y
	syscall
.end_macro

.data
Mensaje1:.asciiz "Bienvenido a la Calculadora de Programador\n"
Mensaje2:.asciiz "Elija el sistema numerico que introducira: \n 1)Binario \n 2)Decimal Empaquetado\n 3)Base 10 \n 4)Octal \n 5)Hexadecimal\n"
Mensaje3:.asciiz "\n El sistema de numeracion al cual convertir: \n 1)Binario \n 2)Decimal Empaquetado\n 3)Base 10 \n 4)Octal \n 5)Hexadecimal\n"
Mensaje4:.asciiz "\n Numero en base 10 introducido: "
SOS: .asciiz "Pase por aqui \n"

numeroCadena:.space 32
signo: .space 2

.text
li $s2 2 #primera posicion
li $s0 0 #constante a multiplicar o dividir

print_S(Mensaje1)
menu:
print_S(Mensaje2)

# El usurio elijira entre :
# 1) Binario
# 2) Decimal empaquetada
# 3) Base 10
# 4) Octal
# 5) Hexadecimal

li $v0, 5
syscall

beq $v0,1 Binario_a2
#beq 2, $v0 Decimal
#beq $v0 3 Base10
#beq 4, $v0 Octal
#beq 5, $v0 Hexadecimal
blt $v0 1 menu
bgt $v0 5 menu

li $t0 0 # es nuestra variable de iteracion
li $t3 0

# $t1 guardar cada uno de los caracteres leidos
# $t2 guardaremos la representacion numerica de dichos caracteres

Binario_a2:#############################################################
	li $v0 8
	la $a0 numeroCadena
	li $a1 33
	syscall

GuardarBits:
	#print_S(numeroCadena)
	li $t2 0
	li $t9 32
	lb $t1 numeroCadena($t0) 	# cargo el valor ascii de 0 o 1
	beq $t1 0xA finGuardarBits 	# $t1 = null finalizar
	beq $t1 0x0 finGuardarBits 
	subi $t2 $t1 0x30 
	addi $t0 $t0 1			# $t0 contador + 1
	sub $t9 $t9 $t0        	# $t2 cargo el valor 0001 o 0000
	sllv $t2 $t2 $t9			# $t3 se mueve una posicion a la izq.4
	or $t3 $t3 $t2
	b GuardarBits


finGuardarBits:
	print_S(Mensaje4)
	print_I($t3)
	li $v0 10
	syscall
	
	
	
	
	
	